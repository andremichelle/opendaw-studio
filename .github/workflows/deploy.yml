# .github/workflows/deploy.yml
name: Deploy openDAW studio

on:
  workflow_dispatch:
    inputs:
      dry:
        description: "Dry run (check secrets, no upload)"
        required: false
        default: 'true'          # booleans must be quoted strings here
        type: boolean

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # 1 ‚ñ∏ pull repo *and* all sub-modules so lib/rebuild.sh exists
      - name: ‚¨áÔ∏è Checkout (incl. submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0          # keeps full history ‚Üí git log works
          submodules: recursive   # grabs lib/ and any nested subs
          # if the sub-module is private add:
          # token: ${{ secrets.PRIVATE_SUBMODULE_PAT }}

      # 2 ‚ñ∏ Node toolchain
      - name: ü¶Ñ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      # 3 ‚ñ∏ Build (top-level script may call lib/rebuild.sh)
      - name: üèóÔ∏è Build project
        shell: bash
        run: |
          chmod +x rebuild.sh        # make sure it‚Äôs executable
          ./rebuild.sh               # exits on error because of set -e in bash

      # 4 ‚ñ∏ Deploy (or dry-run)
      - name: üöö Run deploy script
        env:
          TERM: xterm-256color       # quells ‚ÄúTERM not set‚Äù warnings
          SFTP_HOST:       ${{ vars.SFTP_HOST }}
          SFTP_PORT:       ${{ vars.SFTP_PORT }}
          SFTP_USERNAME:   ${{ vars.SFTP_USERNAME }}
          SFTP_PASSWORD:   ${{ secrets.SFTP_PASSWORD }}
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DRY_RUN:         ${{ inputs.dry && '1' || '0' }}
        run: |
          npx ts-node --transpile-only deploy/run.ts ${{ inputs.dry && '--dry' || '' }}